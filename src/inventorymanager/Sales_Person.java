/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventorymanager;

import java.sql.*;
import java.time.*;
import javax.swing.ListSelectionModel;
import javax.swing.table.*;

/**
 *
 * @author vishal
 */
public class Sales_Person extends javax.swing.JFrame {

    /**
     * Creates new form Sales_Person
     */
    public Sales_Person() {
        initComponents();
        show_pro_list();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        bill_name = new java.awt.TextField();
        label3 = new java.awt.Label();
        sal_per_submit1 = new java.awt.Button();
        jLabel1 = new javax.swing.JLabel();
        combo_pro_name = new javax.swing.JComboBox();
        status = new javax.swing.JLabel();
        combo_pro_quantity = new javax.swing.JSpinner();
        buyitem_satus1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        transaction_table = new javax.swing.JTable();
        produce_bill = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        bill_total = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        label13 = new java.awt.Label();
        label10 = new java.awt.Label();
        label12 = new java.awt.Label();
        label11 = new java.awt.Label();
        sal_per_reset2 = new java.awt.Button();
        sal_per_submit2 = new java.awt.Button();
        Existing_password = new javax.swing.JPasswordField();
        New_password = new javax.swing.JPasswordField();
        Confirm_password = new javax.swing.JPasswordField();
        status1 = new javax.swing.JLabel();
        status2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        sel_per_yes = new javax.swing.JButton();
        sel_per_no = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sales Person");

        label1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label1.setText("Search Items...");

        label2.setText("Bill Name");

        bill_name.setText("Enter bil name");
        bill_name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                bill_nameFocusGained(evt);
            }
        });

        label3.setText("Product Name");

        sal_per_submit1.setLabel("submit");
        sal_per_submit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sal_per_submit1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel1.setText("Quantity");

        combo_pro_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_pro_nameActionPerformed(evt);
            }
        });

        status.setText("jLabel2");

        combo_pro_quantity.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                combo_pro_quantityStateChanged(evt);
            }
        });

        transaction_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product name", "Quantity", "MRP", "Final cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        transaction_table.setColumnSelectionAllowed(true);
        transaction_table.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(transaction_table);
        transaction_table.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        produce_bill.setText("Produce Bill");
        produce_bill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                produce_billActionPerformed(evt);
            }
        });

        jLabel2.setText("Total:");

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bill_name, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(buyitem_satus1)
                                .addGap(162, 162, 162))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(delete)
                                .addGap(28, 28, 28)))
                        .addComponent(produce_bill)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(bill_total)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(combo_pro_name, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(status)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(combo_pro_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                        .addComponent(sal_per_submit1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))))
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bill_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(combo_pro_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(sal_per_submit1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(status))
                    .addComponent(combo_pro_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buyitem_satus1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(produce_bill)
                            .addComponent(jLabel2)
                            .addComponent(bill_total)
                            .addComponent(delete))
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Buy Items", jPanel1);

        label13.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label13.setText("Change Password...");

        label10.setText("Existing Password");

        label12.setText("Confirm Password");

        label11.setText("New Password");

        sal_per_reset2.setLabel("Reset");

        sal_per_submit2.setLabel("Submit");
        sal_per_submit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sal_per_submit2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(sal_per_submit2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(label12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(New_password, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Existing_password, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Confirm_password, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sal_per_reset2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(status1))
                    .addComponent(status2))
                .addContainerGap(212, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(label13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Existing_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(New_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Confirm_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(status1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(label12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sal_per_submit2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sal_per_reset2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 299, Short.MAX_VALUE)
                .addComponent(status2)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Change Password", jPanel3);

        jLabel7.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        jLabel7.setText("Are you sure you want to logout?");

        sel_per_yes.setText("YES");
        sel_per_yes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sel_per_yesActionPerformed(evt);
            }
        });

        sel_per_no.setText("NO");
        sel_per_no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sel_per_noActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(sel_per_yes)
                        .addGap(64, 64, 64)
                        .addComponent(sel_per_no))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel7)))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel7)
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sel_per_yes)
                    .addComponent(sel_per_no))
                .addContainerGap(348, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Logout", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void sel_per_yesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sel_per_yesActionPerformed
        // TODO add your handling code here:
        first fr=new first();
        dispose();
        fr.show();
    }//GEN-LAST:event_sel_per_yesActionPerformed

    private void sel_per_noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sel_per_noActionPerformed
        // TODO add your handling code here:
        Sales_Person sp=new Sales_Person();
        dispose();
        sp.show();
    }//GEN-LAST:event_sel_per_noActionPerformed

    private void sal_per_submit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sal_per_submit2ActionPerformed
       
           sqlconnect sql = new sqlconnect();
        try {
            Connection con;
            con = sql.Connections();
            Statement st = con.createStatement();
            String Query;
            String sel="select * from login where Name='inman'";
            ResultSet res=st.executeQuery(sel);
            while(res.next())
            {
            String pw=res.getString("Password");
            if(Existing_password.getText().equals(pw))
            {
            if (New_password.getText().equals(Confirm_password.getText())) {
                Query = "UPDATE login SET password='" + New_password.getText() + "' WHERE password='" + Existing_password.getText() + "' and Name='inman'";
                System.out.println(Query);
                int rs = st.executeUpdate(Query);
                if (rs > 0) {
                    status2.setText("Sucessfully updated");
                    status1.setText(" ");
                }
            } else {
                status1.setText("Password missmatch");
                status2.setText(" ");
            }
            }
            
            else{
             status2.setText("Invalid password");
            status1.setText(" ");
            Existing_password.setText(" ");
            New_password.setText(" ");
            Confirm_password.setText(" ");
                    }
            }
        } catch (Exception e) {
     
        }
    }//GEN-LAST:event_sal_per_submit2ActionPerformed

    private void combo_pro_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_pro_nameActionPerformed
        // TODO add your handling code here:
        sqlconnect sql=new sqlconnect(); 
        try
        {
        Connection con;    
        con=sql.Connections();
        Statement st = con.createStatement();
        String Query;
             Query = "SELECT * from inventory WHERE pro_name='"+combo_pro_name.getSelectedItem()+"'";
             
        ResultSet res = st.executeQuery(Query); 
        while(res.next())
        {
            String quan=res.getString("quantity");
            
            if(quan.equals("0"))
            {
                status.setText("Out of Stock");
                combo_pro_quantity.setEnabled(false);
                sal_per_submit1.setEnabled(false);
            }
            else
            {
                status.setText("In Stock");
                combo_pro_quantity.setEnabled(true);
                sal_per_submit1.setEnabled(false);
            }
            
            
        }
         }catch (Exception e) 
         {
          e.printStackTrace();
         }
    }//GEN-LAST:event_combo_pro_nameActionPerformed
        int total =0;
        
        
        
    private void sal_per_submit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sal_per_submit1ActionPerformed
       
        sqlconnect sql=new sqlconnect(); 
        DefaultTableModel model = new DefaultTableModel();
        transaction_table.setModel(model);
        model.setColumnIdentifiers(new Object[]{"Product name","Quantity","MRP","Final cost"});
        
       int quan = 0;
       int price=0;
       
     try
        {
           
            Connection con;    
            con=sql.Connections();
            Statement st = con.createStatement();
           String Query = "SELECT * from inventory WHERE pro_name='"+combo_pro_name.getSelectedItem()+"'";
           ResultSet res=st.executeQuery(Query);
           if(res.next())
           {
               quan=(int)res.getInt("quantity");
            price=(int)res.getInt("price");
            System.out.println(quan);
           }
            
           String purchase="INSERT into transaction VALUES('"+bill_name.getText()+"','"+combo_pro_name.getSelectedItem()+"','"+LocalDate.now()+"','"+combo_pro_quantity.getValue()+"','"+price*(int)combo_pro_quantity.getValue()+"')";
           int res2=st.executeUpdate(purchase);
            if((int)combo_pro_quantity.getValue()>quan )
            {
               buyitem_satus1.setText("You Exceeded quantity limit ");
            
            } 
            else if(bill_name.getText().equals("Enter bil name"))
            {
                buyitem_satus1.setText("Please enter bill name");
            }
            else
            {
                String sel = "SELECT * from transaction WHERE bill_name='"+bill_name.getText()+"' and date='"+LocalDate.now()+"'";
                ResultSet res1=st.executeQuery(sel);
                total=0;
                while(res1.next())
                {
                  //System.out.println(res1.getString("cost"));
                  model.addRow(new Object[]{res1.getString("pro_name"),res1.getString("quantity"),(Integer.parseInt(res1.getString("cost"))/Integer.parseInt(res1.getString("quantity"))),res1.getString("cost")});  
                     total=total+Integer.parseInt(res1.getString("cost"));
                }
                
                
               
                
                buyitem_satus1.setText("Successfully added");
                bill_total.setText(String.valueOf(total));
                int  newQuan=quan-(int)combo_pro_quantity.getValue();
                String upd_quantity="UPDATE inventory SET quantity='"+String.valueOf(newQuan)+"' WHERE pro_name='"+combo_pro_name.getSelectedItem().toString()+"'";
                int res3=st.executeUpdate(upd_quantity);
                
            }
            
       }catch (Exception e) 
         {
            e.printStackTrace();
         }
     
    }//GEN-LAST:event_sal_per_submit1ActionPerformed

    private void bill_nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bill_nameFocusGained
        
        bill_name.setText(null);
    }//GEN-LAST:event_bill_nameFocusGained

    private void combo_pro_quantityStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_combo_pro_quantityStateChanged
        
        if((int)combo_pro_quantity.getValue()>0)
            {
               sal_per_submit1.setEnabled(true); 
            }
           
    }//GEN-LAST:event_combo_pro_quantityStateChanged

    private void produce_billActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_produce_billActionPerformed
        // TODO add your handling code here:
           sqlconnect sql = new sqlconnect();
     try
        {
        Connection con;    
        con=sql.Connections();
        Statement st=con.createStatement();
        
        String Query="INSERT into bill VALUES('"+bill_name.getText()+"','"+LocalDate.now()+"','"+total+"')";
        int res = st.executeUpdate(Query);
       
          buyitem_satus1.setText("bill successfully added");
        
               
        }catch (Exception e) 
        {
        e.printStackTrace();
      
        } 
    }//GEN-LAST:event_produce_billActionPerformed
 int Qnt;
 int default_qnt;
 int cost;
    
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        
        Qnt=0;
        default_qnt=0;
        int response, deleterow;
        
        TableModel model=transaction_table.getModel();
        
        int selectrow=transaction_table.getSelectedRow();
        int selectcol=transaction_table.getSelectedColumn();
        
        System.out.println(selectrow+"==="+selectcol);
        System.out.println(model.getValueAt(selectrow, selectcol));
        
        DefaultTableModel model1 = new DefaultTableModel();
        transaction_table.setModel(model1);
        
        model1.setColumnIdentifiers(new Object[]{"Product name","Quantity","MRP","Final cost"});
           sqlconnect sql = new sqlconnect();
     try
        {
        Connection con;    
        con=sql.Connections();
        Statement st=con.createStatement();
        String restore="SELECT * from transaction WHERE pro_name='"+model.getValueAt(selectrow, selectcol)+"' AND bill_name='"+bill_name.getText()+"' and date='"+LocalDate.now()+"'";
        ResultSet res=st.executeQuery(restore);
        
        while(res.next())
        {
             int temp=Integer.parseInt(res.getString("quantity"));
             int temp1=Integer.parseInt(res.getString("cost"));
             Qnt=Qnt+temp;
             cost=cost+temp;
        }
        
        String default_qt="SELECT * from inventory WHERE pro_name='"+model.getValueAt(selectrow, selectcol)+"'";
        ResultSet res2=st.executeQuery(default_qt);
        if(res2.next())
        {
       default_qnt=Integer.parseInt(res2.getString("quantity")); 
       
        }
        
      
         String upd_quantity="UPDATE inventory SET quantity='"+(default_qnt+Qnt)+"' WHERE pro_name='"+model.getValueAt(selectrow, selectcol)+"'";
         System.out.println(upd_quantity);
         st.executeUpdate(upd_quantity);
         bill_total.setText(String.valueOf(Integer.parseInt(bill_total.getText())- cost));
         
        String Query="DELETE FROM transaction WHERE pro_name='"+model.getValueAt(selectrow, selectcol)+"' AND bill_name='"+bill_name.getText()+"' AND date='"+LocalDate.now()+"'";
        st.executeUpdate(Query);
        
        String sel = "SELECT * from transaction WHERE bill_name='"+bill_name.getText()+"' and date='"+LocalDate.now()+"'";
                ResultSet res1=st.executeQuery(sel);
                
                while(res1.next())
                {
                  
                  model1.addRow(new Object[]{res1.getString("pro_name"),res1.getString("quantity"),(Integer.parseInt(res1.getString("cost"))/Integer.parseInt(res1.getString("quantity"))),res1.getString("cost")});  
                     total=total+Integer.parseInt(res1.getString("cost"));
                }
        }catch (Exception e) 
        {
        e.printStackTrace();
      
        }           
        
    }//GEN-LAST:event_deleteActionPerformed

    void show_pro_list()
    {
           sqlconnect sql = new sqlconnect();
     try
        {
        Connection con;    
        con=sql.Connections();
        Statement st=con.createStatement();
        String Query="select * from inventory";
        ResultSet res = st.executeQuery(Query);
        
        while(res.next())
        {
            String list=res.getString("pro_name");
            System.out.println(list);
            combo_pro_name.addItem(list);
        }
        
        }catch (Exception e) 
        {
        e.printStackTrace();
      
        }

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sales_Person.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sales_Person.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sales_Person.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sales_Person.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sales_Person().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField Confirm_password;
    private javax.swing.JPasswordField Existing_password;
    private javax.swing.JPasswordField New_password;
    private java.awt.TextField bill_name;
    private javax.swing.JLabel bill_total;
    private javax.swing.JLabel buyitem_satus1;
    private javax.swing.JComboBox combo_pro_name;
    private javax.swing.JSpinner combo_pro_quantity;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private java.awt.Label label1;
    private java.awt.Label label10;
    private java.awt.Label label11;
    private java.awt.Label label12;
    private java.awt.Label label13;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private javax.swing.JButton produce_bill;
    private java.awt.Button sal_per_reset2;
    private java.awt.Button sal_per_submit1;
    private java.awt.Button sal_per_submit2;
    private javax.swing.JButton sel_per_no;
    private javax.swing.JButton sel_per_yes;
    private javax.swing.JLabel status;
    private javax.swing.JLabel status1;
    private javax.swing.JLabel status2;
    private javax.swing.JTable transaction_table;
    // End of variables declaration//GEN-END:variables
}
